package JocdelaVida;

import static org.junit.Assert.*;

import java.util.Arrays;
import java.util.Collection;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

@RunWith(Parameterized.class)
public class ClonarTest {

	private int [] dim;
	private int [][] ini;
	private int [][] fin;
	private int [][] pru;
	
	private static int [] [] [] original = { 
			{
				{0,0,0,0},
				{1,1,0,0},
				{0,0,0,0},
				{1,1,0,0},
				{1,1,0,0}
			},
			{ 
				{0,0,0,1,1,0,1,0,0},
				{0,0,0,0,0,0,1,0,0},
				{0,0,0,0,0,0,1,1,0},
				{0,1,1,0,0,0,1,0,1},
				{0,0,1,0,0,0,0,0,1},
				{0,0,0,0,0,1,1,0,1},
				{0,0,0,0,0,0,0,0,0}
			
			},
			{ 	
				{0,0,0,0},
				{0,0,0,0},
				{0,1,1,1},
				{0,0,0,0}
				
			},
			{ 
				{0,0,1,1,0,0,0,0,0},
				{0,0,1,1,0,0,0,0,0},
				{0,0,1,1,0,0,0,0,0},
				{0,0,1,1,0,0,0,0,0}

			
			},
			{ 
				{0,0,1,0,0,0,0},
				{0,1,1,0,0,0,0},
				{1,1,0,0,0,0,0},
				{0,0,0,0,0,0,0}

			
			},
			{ 
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0}
			
			},
			{ 
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,1,0},
				{0,1,0,1},
				{0,0,1,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0}
			
			},
			{ 
				{0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0},
				{0,1,1,1,0,0,0},
				{0,0,0,0,0,1,1},
				{0,0,0,0,0,1,1}
			},
			{ 
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0}
			}
		};
	private static int [] [] [] copia = { 
			{
				{0,0,0,0},
				{1,1,0,0},
				{0,0,0,0},
				{1,1,0,0},
				{1,1,0,0}
			},
			{ 
				{0,0,0,1,1,0,1,0,0},
				{0,0,0,0,0,0,1,0,0},
				{0,0,0,0,0,0,1,1,0},
				{0,1,1,0,0,0,1,0,1},
				{0,0,1,0,0,0,0,0,1},
				{0,0,0,0,0,1,1,0,1},
				{0,0,0,0,0,0,0,0,0}
			
			},
			{ 	
				{0,0,0,0},
				{0,0,0,0},
				{0,1,1,1},
				{0,0,0,0}
				
			},
			{ 
				{0,0,1,1,0,0,0,0,0},
				{0,0,1,1,0,0,0,0,0},
				{0,0,1,1,0,0,0,0,0},
				{0,0,1,1,0,0,0,0,0}

			
			},
			{ 
				{0,0,1,0,0,0,0},
				{0,1,1,0,0,0,0},
				{1,1,0,0,0,0,0},
				{0,0,0,0,0,0,0}

			
			},
			{ 
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0}
			
			},
			{ 
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,1,0},
				{0,1,0,1},
				{0,0,1,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0}
			
			},
			{ 
				{0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0},
				{0,1,1,1,0,0,0},
				{0,0,0,0,0,1,1},
				{0,0,0,0,0,1,1}
			},
			{ 
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0}
			}
		};
	private static int [] [] [] prueba = { 
			{
				{0,0,0,0},
				{1,1,0,0},
				{0,0,0,0},
				{1,1,0,0},
				{1,1,0,0}
			},
			{ 
				{0,0,0,1,1,0,1,0,0},
				{0,0,0,0,0,0,1,0,0},
				{0,0,0,0,0,0,1,1,0},
				{0,1,1,0,0,0,1,0,1},
				{0,0,1,0,0,0,0,0,1},
				{0,0,0,0,0,1,1,0,1},
				{0,0,0,0,0,0,0,0,0}
			
			},
			{ 	
				{0,0,0,0},
				{0,0,0,0},
				{0,1,1,1},
				{0,0,0,0}
				
			},
			{ 
				{0,0,1,1,0,0,0,0,0},
				{0,0,1,1,0,0,0,0,0},
				{0,0,1,1,0,0,0,0,0},
				{0,0,1,1,0,0,0,0,0}

			
			},
			{ 
				{0,0,1,0,0,0,0},
				{0,1,1,0,0,0,0},
				{1,1,0,0,0,0,0},
				{0,0,0,0,0,0,0}

			
			},
			{ 
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0}
			
			},
			{ 
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,1,0},
				{0,1,0,1},
				{0,0,1,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0}
			
			},
			{ 
				{0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0},
				{0,1,1,1,0,0,0},
				{0,0,0,0,0,1,1},
				{0,0,0,0,0,1,1}
			},
			{ 
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0}
			}
		};
	private static int [][] dimensiones = { 
			
			{5,4},
			{7,9},
			{4,4},
			{4,9},
			{4,7},
			{8,4},
			{9,4},
			{5,7},
			{4,9}
	};
	public ClonarTest  (int[][]inicial, int[][]fina, int[][]prueba,int [] dimensions) {
		this.ini=inicial;
		this.fin=fina;
		this.dim =dimensions;
		this.pru=prueba;
		
	}
	@Parameters
	public static Collection<Object[]> numeros() {
		
		return Arrays.asList(new Object[][] {
			{original[0], copia[0], prueba[0] ,dimensiones[0]},
			{original[1], copia[1], prueba[1] ,dimensiones[1]},
			{original[2], copia[2], prueba[2] ,dimensiones[2]},
			{original[3], copia[3], prueba[3] ,dimensiones[3]},
			{original[4], copia[4], prueba[4] ,dimensiones[4]},
			{original[5], copia[5], prueba[5] ,dimensiones[5]},
			{original[6], copia[6], prueba[6] ,dimensiones[6]},
			{original[7], copia[7], prueba[7] ,dimensiones[7]},
			{original[8], copia[8], prueba[8] ,dimensiones[8]}

			
		});
	}
	@Test
	public void testClonarTauler() {
		int [][] res = Joc.clonartaula(dim,ini,fin);
		assertArrayEquals(pru, res);
	}

}
